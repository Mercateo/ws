// this file was generated by @mercateo/ws - do not modify it manually
const IntlMessageFormat = require('intl-messageformat');
const INTL_LOCALE = process.env.INTL_LOCALE;

const cachedMessages: { [s: string]: any } = {};

/**
 * `en_GB`: Hello TREE_SHAKING.foo!
 * `en_US`: Hello TREE_SHAKING.foo!
 * `de_DE`: Hallo TREE_SHAKING.foo!
 * `de_AT`: Hallo TREE_SHAKING.foo!
 */
export const foo = (): string => {
  if (!cachedMessages['foo']) {
    let ast: any;

    if (process.env.LOCALE === 'en_GB') {
      ast = {
        type: 'messageFormatPattern',
        elements: [
          {
            type: 'messageTextElement',
            value: 'Hello TREE_SHAKING.foo!'
          }
        ]
      };
    }

    if (process.env.LOCALE === 'en_US') {
      ast = {
        type: 'messageFormatPattern',
        elements: [
          {
            type: 'messageTextElement',
            value: 'Hello TREE_SHAKING.foo!'
          }
        ]
      };
    }

    if (process.env.LOCALE === 'de_DE') {
      ast = {
        type: 'messageFormatPattern',
        elements: [
          {
            type: 'messageTextElement',
            value: 'Hallo TREE_SHAKING.foo!'
          }
        ]
      };
    }

    if (process.env.LOCALE === 'de_AT') {
      ast = {
        type: 'messageFormatPattern',
        elements: [
          {
            type: 'messageTextElement',
            value: 'Hallo TREE_SHAKING.foo!'
          }
        ]
      };
    }

    if (!ast) {
      console.warn('Cannot find translation for "foo".');
      return '<foo>';
    }

    cachedMessages['foo'] = new IntlMessageFormat(ast, INTL_LOCALE);
  }

  return cachedMessages['foo'].format();
};

/**
 * `en_GB`: Hello TREE_SHAKING.bar!
 * `en_US`: Hello TREE_SHAKING.bar!
 * `de_DE`: Hallo TREE_SHAKING.bar!
 * `de_AT`: Hallo TREE_SHAKING.bar!
 */
export const bar = (): string => {
  if (!cachedMessages['bar']) {
    let ast: any;

    if (process.env.LOCALE === 'en_GB') {
      ast = {
        type: 'messageFormatPattern',
        elements: [
          {
            type: 'messageTextElement',
            value: 'Hello TREE_SHAKING.bar!'
          }
        ]
      };
    }

    if (process.env.LOCALE === 'en_US') {
      ast = {
        type: 'messageFormatPattern',
        elements: [
          {
            type: 'messageTextElement',
            value: 'Hello TREE_SHAKING.bar!'
          }
        ]
      };
    }

    if (process.env.LOCALE === 'de_DE') {
      ast = {
        type: 'messageFormatPattern',
        elements: [
          {
            type: 'messageTextElement',
            value: 'Hallo TREE_SHAKING.bar!'
          }
        ]
      };
    }

    if (process.env.LOCALE === 'de_AT') {
      ast = {
        type: 'messageFormatPattern',
        elements: [
          {
            type: 'messageTextElement',
            value: 'Hallo TREE_SHAKING.bar!'
          }
        ]
      };
    }

    if (!ast) {
      console.warn('Cannot find translation for "bar".');
      return '<bar>';
    }

    cachedMessages['bar'] = new IntlMessageFormat(ast, INTL_LOCALE);
  }

  return cachedMessages['bar'].format();
};

/**
 * `en_GB`: Hallo TREE_SHAKING.baz!
 * `en_US`: Hallo TREE_SHAKING.baz!
 * `de_DE`: Hallo TREE_SHAKING.baz!
 * `de_AT`: Hallo TREE_SHAKING.baz!
 */
export const baz = (): string => {
  if (!cachedMessages['baz']) {
    let ast: any;

    if (process.env.LOCALE === 'en_GB') {
      ast = {
        type: 'messageFormatPattern',
        elements: [
          {
            type: 'messageTextElement',
            value: 'Hallo TREE_SHAKING.baz!'
          }
        ]
      };
    }

    if (process.env.LOCALE === 'en_US') {
      ast = {
        type: 'messageFormatPattern',
        elements: [
          {
            type: 'messageTextElement',
            value: 'Hallo TREE_SHAKING.baz!'
          }
        ]
      };
    }

    if (process.env.LOCALE === 'de_DE') {
      ast = {
        type: 'messageFormatPattern',
        elements: [
          {
            type: 'messageTextElement',
            value: 'Hallo TREE_SHAKING.baz!'
          }
        ]
      };
    }

    if (process.env.LOCALE === 'de_AT') {
      ast = {
        type: 'messageFormatPattern',
        elements: [
          {
            type: 'messageTextElement',
            value: 'Hallo TREE_SHAKING.baz!'
          }
        ]
      };
    }

    if (!ast) {
      console.warn('Cannot find translation for "baz".');
      return '<baz>';
    }

    cachedMessages['baz'] = new IntlMessageFormat(ast, INTL_LOCALE);
  }

  return cachedMessages['baz'].format();
};

